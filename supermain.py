import telebot, string, random
import json
import os
import output_hw
import mydate
import other_functions
from telebot import types

token = open('file_token.txt').read()
bot = telebot.TeleBot(token)
print("Bot is online.")
myid = ""


@bot.message_handler(commands=['start'])
def start(message):
    global myid
    myid = str(message.from_user.id)

    file_name = "homework" + str(message.from_user.id) + ".json"
    open('./jsons/' + file_name, 'a', encoding='utf-8')
    a = open('./jsons/' + 'homework' + myid + ".json", 'r', encoding='utf-8').read()
    if len(a) == 0:
        with open('./jsons/' + file_name, 'w', encoding='utf-8') as f:
            json.dump({}, f)
        f.close()

    file_name = "user_state" + str(message.from_user.id) + ".json"
    #open('./jsons/' + file_name, 'w', encoding='utf-8')
    with open('./jsons/' + file_name, 'w', encoding='utf-8') as f:
        json.dump({str(message.from_user.id): "not found"}, f)
    f.close()

    user_state = json.loads(open('./jsons/' + file_name, 'r', encoding='utf-8').read())

    file_name = "helper" + str(message.from_user.id) + ".json"
    with open('./jsons/' + file_name, 'w', encoding='utf-8') as f:
        json.dump({"type": "", "day": "", "profile": "all", "sub": "", "cnt": 0}, f)
    f.close()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_start_1 = types.KeyboardButton("–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìö")
    btn_start_admin_1 = types.KeyboardButton("‚ú®–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ‚ú®")
    btn_start_2 = types.KeyboardButton("–ú—É–∑—ã–∫–∞")
    btn_start_3 = types.KeyboardButton("–ú–µ–º—ã")
    btn_start_4 = types.KeyboardButton("–ü–æ–ª–µ–∑–Ω–æ–µ")

    markup.add(btn_start_1, btn_start_admin_1)
    markup.add(btn_start_2, btn_start_3, btn_start_4)

    user_state[str(message.chat.id)] = 'main menu'
    open('./jsons/user_state' + myid + '.json', 'w', encoding='utf-8').write(json.dumps(user_state, ensure_ascii=False))
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ —à–∫–æ–ª–æ–π. –ß—Ç–æ —Ç–µ–±–µ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å?".format(
                         message.from_user), reply_markup=markup)

@bot.message_handler(content_types=['text', 'photo'])
def func(message):

    myid = str(message.from_user.id)
    homework = json.loads(open('./jsons/' + 'homework' + myid + ".json", 'r', encoding='utf-8').read())
    user_state = json.loads(open('./jsons/' + "user_state" + myid + ".json", 'r', encoding='utf-8').read())
    helper = json.loads(open('./jsons/' + "helper" + myid + ".json", 'r', encoding='utf-8').read())

    print(user_state)
    mes_text = "-1"
    if message.photo == None:
        mes_text = message.text
        mes_text = mes_text.lower()

    # –∫–Ω–æ–ø–∫–∞ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
    if mes_text == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥" or mes_text == "–Ω–µ—Ç‚ùå" or user_state[myid] in "not found":
        if user_state[str(message.chat.id)] in ["not found", "homework", "redakt hw"]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_start_1 = types.KeyboardButton("–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìö")
            btn_start_admin_1 = types.KeyboardButton("‚ú®–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ‚ú®")
            btn_start_2 = types.KeyboardButton("–ú—É–∑—ã–∫–∞")
            btn_start_3 = types.KeyboardButton("–ú–µ–º—ã")
            btn_start_4 = types.KeyboardButton("–ü–æ–ª–µ–∑–Ω–æ–µ")

            markup.add(btn_start_1, btn_start_admin_1)
            markup.add(btn_start_2, btn_start_3, btn_start_4)

            user_state[str(message.chat.id)] = 'main menu'
            bot.send_message(message.chat.id,
                             text="–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –° —á–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å?".format(message.from_user),
                             reply_markup=markup)
        elif user_state[str(message.chat.id)] in ["add_hw", "del_hw", "del_all_day", "del_all_hw"]:
            user_state[str(message.chat.id)] = 'redakt hw'
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
            btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
            btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
            btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
            markup.add(btn_hw_1, btn_hw_3)
            markup.add(btn_hw_4, btn_hw_5)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å.", reply_markup=markup)
        elif user_state[str(message.chat.id)] in ["read_add_hw"]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            user_state[str(message.chat.id)] = 'add_hw'
            helper["type"] = ""
            helper["cnt"] = 0
            bot.send_message(message.chat.id,
                             text="–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –¥–∑.",
                             reply_markup=markup)
        elif user_state[str(message.chat.id)] in ["read_del_hw"]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            user_state[str(message.chat.id)] = 'del_hw'
            bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –¥–∑.",
                             reply_markup=markup)
        elif user_state[str(message.chat.id)] in ["watch_hw"]:
            user_state[str(message.chat.id)] = 'homework'
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_schedule_1 = types.KeyboardButton("–î–ó –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
            btn_schedule_2 = types.KeyboardButton("–î–ó –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫")
            btn_schedule_3 = types.KeyboardButton("–î–ó –Ω–∞ —Å—Ä–µ–¥—É")
            btn_schedule_4 = types.KeyboardButton("–î–ó –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥")
            btn_schedule_5 = types.KeyboardButton("–î–ó –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É")
            btn_schedule_6 = types.KeyboardButton("–î–ó –Ω–∞ —Å—É–±–±–æ—Ç—É")
            btn_schedule_7 = types.KeyboardButton("–î–ó –Ω–∞ –¥—Ä—É–≥–æ–π –¥–µ–Ω—å")
            btn_schedule_8 = types.KeyboardButton("–î–ó –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏")
            back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_schedule_1, btn_schedule_2)
            markup.add(btn_schedule_3, btn_schedule_4)
            markup.add(btn_schedule_5, btn_schedule_6)
            markup.add(btn_schedule_7, btn_schedule_8)
            markup.add(back)
            bot.send_message(message.chat.id, text="–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ?",
                             reply_markup=markup)
        elif user_state[str(message.chat.id)] in ["del_all_day_is_correct"]:
            user_state[str(message.chat.id)] = "del_all_day"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            bot.send_message(message.chat.id, text="–û—Ç–ø—Ä–∞–≤—å –¥–µ–Ω—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –¥–∑ –≤ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å.",
                             reply_markup=markup)
        elif user_state[str(message.chat.id)] in ["text_sch"]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            bot.send_message(message.chat.id,
                             text="–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.",
                             reply_markup=markup)
            user_state[str(message.chat.id)] = "add_text_sch"
        elif user_state[str(message.chat.id)] in ["photo_sch"]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            bot.send_message(message.chat.id,
                             text="–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å —Ñ–æ—Ç–æ (—á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ, –≤–µ—Ä–Ω–∏—Å—å –≤ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞).",
                             reply_markup=markup)
            user_state[str(message.chat.id)] = "add_photo_sch"
        elif user_state[str(message.chat.id)] in ["add_text_sch", "add_photo_sch"]:
            user_state[str(message.chat.id)] = 'redakt sch'
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_sch_1 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç/—É–¥–∞–ª–∏—Ç—å")
            btn_sch_2 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ")
            markup.add(btn_sch_1, btn_sch_2)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å.", reply_markup=markup)

    # –≤—ã–≤–æ–¥ –¥–∑
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
        user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mydate.get_day_by_number(1))
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫":
        user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mydate.get_day_by_number(2))
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –Ω–∞ —Å—Ä–µ–¥—É":
        user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mydate.get_day_by_number(3))
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥":
        user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mydate.get_day_by_number(4))
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É":
        user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mydate.get_day_by_number(5))
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –Ω–∞ —Å—É–±–±–æ—Ç—É":
        user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mydate.get_day_by_number(6))
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏":
        user_state[str(message.chat.id)] = output_hw.print_week(bot, message)
    elif user_state[str(message.chat.id)] == 'watch_hw':
        user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mes_text)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
    elif user_state[str(message.chat.id)] == 'homework' and mes_text == "–¥–∑ –Ω–∞ –¥—Ä—É–≥–æ–π –¥–µ–Ω—å":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑",
                         reply_markup=markup)
        user_state[str(message.chat.id)] = "watch_hw"

    # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∑
    elif user_state[str(message.chat.id)] == 'homework' or user_state[str(message.chat.id)] == 'main menu' and mes_text == "–¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìö":
        user_state[str(message.chat.id)] = 'homework'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_schedule_1 = types.KeyboardButton("–î–ó –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
        btn_schedule_2 = types.KeyboardButton("–î–ó –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫")
        btn_schedule_3 = types.KeyboardButton("–î–ó –Ω–∞ —Å—Ä–µ–¥—É")
        btn_schedule_4 = types.KeyboardButton("–î–ó –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥")
        btn_schedule_5 = types.KeyboardButton("–î–ó –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É")
        btn_schedule_6 = types.KeyboardButton("–î–ó –Ω–∞ —Å—É–±–±–æ—Ç—É")
        btn_schedule_7 = types.KeyboardButton("–î–ó –Ω–∞ –¥—Ä—É–≥–æ–π –¥–µ–Ω—å")
        btn_schedule_8 = types.KeyboardButton("–î–ó –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_schedule_1, btn_schedule_2)
        markup.add(btn_schedule_3, btn_schedule_4)
        markup.add(btn_schedule_5, btn_schedule_6)
        markup.add(btn_schedule_7, btn_schedule_8)
        markup.add(back)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ?", reply_markup=markup)

    # –∫–Ω–æ–ø–∫–∞ –ø–æ–ª–µ–∑–Ω–æ–µ
    elif (user_state[str(message.chat.id)] == 'main menu' and mes_text == "–ø–æ–ª–µ–∑–Ω–æ–µ"):
        other_functions.more_information(bot, message)

    # –∫–Ω–æ–ø–∫–∞ –º—É–∑—ã–∫–∞
    elif user_state[str(message.chat.id)] == 'main menu' and mes_text == "–º—É–∑—ã–∫–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id, text="üéß5 —Ç—Ä–µ–∫–æ–≤ –¥–ª—è —É—á–µ–±—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è!", reply_markup=markup)
        other_functions.send_playlist(bot, message)

    # –∫–Ω–æ–ø–∫–∞ –º–µ–º—ã
    elif user_state[str(message.chat.id)] == 'main menu' and mes_text == "–º–µ–º—ã":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        photo = other_functions.send_memes(bot, message)
        bot.send_photo(message.chat.id, photo, reply_markup=markup)

    # –¥–æ–±–∞–≤–∏—Ç—å –¥–∑
    elif user_state[str(message.chat.id)] == 'redakt hw' and mes_text == "–¥–æ–±–∞–≤–∏—Ç—å –¥–∑":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –¥–∑.",
                         reply_markup=markup)
        user_state[str(message.chat.id)] = "add_hw"

    # —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ –¥–ª—è –¥–∑
    elif helper["type"] == "add" and user_state[str(message.chat.id)] == "read_add_hw":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        fileID = message.photo[-1].file_id
        file_info = bot.get_file(fileID)
        downloaded_file = bot.download_file(file_info.file_path)
        name_of_new_file = other_functions.randomword(20) + ".jpg"
        src = './photos/' + name_of_new_file
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        if not (helper["sub"] in homework[helper["day"]][helper["profile"]]["im"].keys()):
            homework[helper["day"]][helper["profile"]]["im"][helper["sub"]] = []
        homework[helper["day"]][helper["profile"]]["im"][helper["sub"]].append(name_of_new_file)
        helper["cnt"] = (helper["cnt"] - 1)
        if helper["cnt"] == 0:
            user_state[str(message.chat.id)] = 'redakt hw'
            btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
            btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
            btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
            btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
            markup.add(btn_hw_1, btn_hw_3)
            markup.add(btn_hw_4, btn_hw_5)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            bot.send_message(message.chat.id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
            helper["type"] = ""

    # –≤—ã–≤–æ–¥ –¥–∑ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    elif user_state[str(message.chat.id)] == "add_hw":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        if not mydate.is_good_date(mes_text):
            bot.send_message(message.chat.id, text="–¢—ã –≤–≤–µ–ª –¥–∞—Ç—É –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É.")
        else:
            user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mes_text)
            helper["day"] = mes_text
            user_state[str(message.chat.id)] = "read_add_hw"
            bot.send_message(message.chat.id,
                             text="–ù–∞–ø–∏—à–∏ –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: *–ø—Ä–µ–¥–º–µ—Ç* —Å *—Ö* —Ñ–æ—Ç–æ –∏ —Å–∞–º–æ –¥–∑.\n*–ø—Ä–µ–¥–º–µ—Ç* - –ø—Ä–µ–¥–º–µ—Ç, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–π –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ.\n—Å —Ö —Ñ–æ—Ç–æ, –≥–¥–µ —Ö - –∫–æ–ª-–≤–æ —Ñ–æ—Ç–æ –¥–∑ –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç, 0<=x<=10 (–ï—Å–ª–∏ —Ñ–æ—Ç–æ –µ—Å—Ç—å, —Ç–æ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ(–∏—Ö) —Å–ª–µ–¥—É—é—â–∏–º(-–∏) —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ, —Ç–æ –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º, —á—Ç–æ –≤—Å–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ñ–æ—Ç–æ.)",
                             reply_markup=markup)
    # —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∑ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    elif user_state[str(message.chat.id)] == "read_add_hw":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        #btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        check = list(mes_text.split())
        if len(check) < 4 or check[1] != '—Å' or not(check[2] in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10']) or check[3] != '—Ñ–æ—Ç–æ':
            bot.send_message(message.chat.id,
                             text="–í–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å. –ù–∞–ø–∏—à–∏ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: *–ø—Ä–µ–¥–º–µ—Ç* —Å *x* —Ñ–æ—Ç–æ –∏ —Å–∞–º–æ –¥–∑.\n*–ø—Ä–µ–¥–º–µ—Ç* - –ø—Ä–µ–¥–º–µ—Ç, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–π –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ.\n—Å —Ö —Ñ–æ—Ç–æ, –≥–¥–µ —Ö - –∫–æ–ª-–≤–æ —Ñ–æ—Ç–æ –¥–∑ –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç, 0<=x<=10 (–ï—Å–ª–∏ —Ñ–æ—Ç–æ –µ—Å—Ç—å, —Ç–æ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ(–∏—Ö) —Å–ª–µ–¥—É—é—É—â–∏–º(-–∏) —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ, —Ç–æ –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º, —á—Ç–æ –≤—Å—ë –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ñ–æ—Ç–æ.)",
                             reply_markup=markup)
        else:
            sub = mes_text.split()[0]
            profile = "all"
            cnt = int(mes_text.split()[2])
            type = "add"
            hw = ""
            for x in message.text.split()[4::]:
                hw = hw + x + " "
            if not (helper["day"] in homework.keys()):
                homework[helper["day"]] = {"all": {"texts": {}, "im": {}}}
            else:
                if len(homework[helper["day"]][profile]["texts"]) != 0 and sub in homework[helper["day"]][profile]["texts"].keys():
                    del homework[helper["day"]][profile]["texts"][sub]
                if len(homework[helper["day"]][profile]["im"]) != 0 and sub in homework[helper["day"]][profile]["im"].keys():
                    for x in homework[helper["day"]][profile]["im"][sub]:
                        os.remove("./photos/" + x)
                    del homework[helper["day"]][profile]["im"][sub]
            homework[helper["day"]][profile]["texts"][sub] = hw
            if cnt == 0:
                user_state[str(message.chat.id)] = 'redakt hw'
                btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
                btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
                btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
                btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
                markup.add(btn_hw_1, btn_hw_3)
                markup.add(btn_hw_4, btn_hw_5)
                btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                markup.add(btn_back)
                bot.send_message(message.chat.id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
                helper["type"] = ""
            else:
                helper["type"] = type
                helper["profile"] = profile
                helper["sub"] = sub
                helper["cnt"] = cnt

    # —É–¥–∞–ª–∏—Ç—å –¥–∑
    elif user_state[str(message.chat.id)] == 'redakt hw' and mes_text == "—É–¥–∞–ª–∏—Ç—å –¥–∑":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –≤ –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –¥–∑.",
                         reply_markup=markup)
        user_state[str(message.chat.id)] = "del_hw"

    # –≤—ã–≤–æ–¥ –¥–∑ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    elif user_state[str(message.chat.id)] == "del_hw":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        day = mes_text
        if not mydate.is_good_date(mes_text):
            bot.send_message(message.chat.id, text="–¢—ã –≤–≤–µ–ª –¥–∞—Ç—É –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É.")
        else:
            user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, day)
            helper["day"] = day
            bot.send_message(message.chat.id,
                             text='–ù–∞–ø–∏—à–∏ –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: *–ø—Ä–µ–¥–º–µ—Ç* *—á—Ç–æ —É–¥–∞–ª–∏—Ç—å*\n*–ø—Ä–µ–¥–º–µ—Ç* - –ø—Ä–µ–¥–º–µ—Ç —Ç–∞–∫, –∫–∞–∫ –æ–Ω –∑–∞–ø–∏—Å–∞–Ω –≤—ã—à–µ.\n*—á—Ç–æ —É–¥–∞–ª–∏—Ç—å* - —Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ –∏ –ø–µ—Ä–µ—á–µ—Å–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å(–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ "—Ñ–æ—Ç–æ" –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–æ—Ç–æ), "–≤—Å–µ", –µ—Å–ª–∏ –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å –≤—Å—é –¥–æ–º–∞—à–∫—É –Ω–∞ –¥–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç\n',
                             reply_markup=markup)
            user_state[str(message.chat.id)] = "read_del_hw"

    # —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∑ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    elif user_state[str(message.chat.id)] == "read_del_hw":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        if len(list(mes_text.split())) != 2:
            bot.send_message(message.chat.id, text="–¢—ã –≤–≤–µ–ª –∑–∞–ø—Ä–æ—Å –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É.")
        else:
            sub = mes_text.split()[0]
            profile = "all"
            day = helper["day"]
            if mes_text.split()[2] == "–≤—Å–µ":
                if not(sub in homework[day][profile]["texts"].keys()):
                    bot.send_message(message.chat.id, text="–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –∑–∞–ø—Ä–æ—Å.",
                                    reply_markup=markup)
                else:
                    helper["type"] = ""
                    if len(homework[day][profile]["texts"]) != 0:
                        del homework[day][profile]["texts"][sub]
                    if len(homework[day][profile]["im"]) != 0:
                        for x in homework[day][profile]["im"][sub]:
                            os.remove("./photos/" + x)
                    user_state[str(message.chat.id)] = 'redakt hw'
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
                    btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
                    btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
                    btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
                    markup.add(btn_hw_1, btn_hw_3)
                    markup.add(btn_hw_4, btn_hw_5)
                    btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                    markup.add(btn_back)
                    bot.send_message(message.chat.id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!", reply_markup=markup)
            elif mes_text.split()[2] == "—Ç–µ–∫—Å—Ç":
                if not(sub in homework[day][profile]["texts"].keys()):
                    bot.send_message(message.chat.id, text="–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –∑–∞–ø—Ä–æ—Å.",
                                     reply_markup=markup)
                else:
                    del homework[day][profile]["texts"][sub]
                    user_state[str(message.chat.id)] = 'redakt hw'
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
                    btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
                    btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
                    btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
                    markup.add(btn_hw_1, btn_hw_3)
                    markup.add(btn_hw_4, btn_hw_5)
                    btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                    markup.add(btn_back)
                    bot.send_message(message.chat.id,
                                     text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ! –ù–µ –∑–∞–±—É–¥—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ!",
                                     reply_markup=markup)
            else:
                if not(sub in homework[day][profile]["im"].keys()):
                    bot.send_message(message.chat.id, text="–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –∑–∞–ø—Ä–æ—Å.",
                                     reply_markup=markup)
                else:
                    if mes_text.split()[-1] == "—Ñ–æ—Ç–æ":
                        for x in homework[day][profile]["im"][sub]:
                            os.remove("./photos/" + x)
                        del homework[day][profile]["im"][sub]
                    else:
                        new_photos = []
                        for i in range(0, len(homework[day][profile]["im"][sub])):
                            if not (str(i + 1) in mes_text):
                                new_photos.append(homework[day][profile]["im"][sub][i])
                        for x in homework[day][profile]["im"][sub]:
                            if not x in new_photos:
                                os.remove("./photos/" + x)
                        homework[day][profile]["im"][sub] = new_photos
                    user_state[str(message.chat.id)] = 'redakt hw'
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
                    btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
                    btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
                    btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
                    markup.add(btn_hw_1, btn_hw_3)
                    markup.add(btn_hw_4, btn_hw_5)
                    btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                    markup.add(btn_back)
                    bot.send_message(message.chat.id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!", reply_markup=markup)
            ch = 0
            for profile in homework[day]:
                if len(homework[day][profile]["texts"]) != 0:
                    ch += 1
            if ch == 0:
                del homework[day]

    # –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ–≥–æ –¥–∑
    elif user_state[str(message.chat.id)] == 'redakt hw' and mes_text == "—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_yes = types.KeyboardButton("–î–∞‚úÖ")
        btn_no = types.KeyboardButton("–ù–µ—Ç‚ùå")
        markup.add(btn_yes, btn_no)
        bot.send_message(message.chat.id, text="–¢—ã —É–≤–µ—Ä–µ–Ω?", reply_markup=markup)
        user_state[str(message.chat.id)] = "del_all_hw"
    elif mes_text == "–¥–∞‚úÖ" and user_state[str(message.chat.id)] == "del_all_hw":
        texts = []
        days = []
        profile = "all"
        for day in homework:
            days.append(day)
            if len(homework[day][profile]["texts"]) != 0:
                for subject in homework[day][profile]["texts"]:
                    texts.append(day + " " + profile + " " + subject + " texts")
            if len(homework[day][profile]["im"]) != 0:
                for subject in homework[day][profile]["im"]:
                    texts.append(day + " " + profile + " " + subject + " im")
        for x in texts:
            day = x.split()[0]
            profile = "all"
            subject = x.split()[2]
            wh = x.split()[3]
            if wh == "texts":
                del homework[day][profile]["texts"][subject]
            else:
                if len(homework[day][profile]["im"]) != 0:
                    if subject in homework[day][profile]["im"].keys():
                        for y in homework[day][profile]["im"][subject]:
                            os.remove("./photos/" + y)
                    del homework[day][profile]["im"][subject]
        for cur_day in days:
            del homework[cur_day]
        user_state[str(message.chat.id)] = 'redakt hw'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
        btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
        btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
        btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
        markup.add(btn_hw_1, btn_hw_3)
        markup.add(btn_hw_4, btn_hw_5)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        bot.send_message(message.chat.id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.", reply_markup=markup)


    # –æ—á–∏—Å—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ –¥–Ω—è
    elif user_state[str(message.chat.id)] == 'redakt hw' and mes_text == "—É–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å":
        user_state[str(message.chat.id)] = "del_all_day"
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        bot.send_message(message.chat.id, text="–û—Ç–ø—Ä–∞–≤—å –¥–µ–Ω—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –¥–∑ –≤ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å.",
                         reply_markup=markup)
    elif user_state[str(message.chat.id)] == "del_all_day":
        if not mydate.is_good_date(mes_text):
            bot.send_message(message.chat.id, text="–¢—ã –≤–≤–µ–ª –¥–∞—Ç—É –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É.")
        else:
            user_state[str(message.chat.id)] = output_hw.print_homework(bot, message, mes_text)
            if ((not (mes_text in homework.keys())) or (len(homework[mes_text]["both"]["texts"]) == 0 and len(
                    homework[mes_text]["inf"]["texts"]) == 0 and len(homework[mes_text]["mat"]["texts"]) == 0)):
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                markup.add(btn_back)
                return
            user_state[str(message.chat.id)] = "del_all_day_is_correct"
            helper["day"] = mes_text
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_yes = types.KeyboardButton("–î–∞‚úÖ")
            btn_no = types.KeyboardButton("–ù–µ—Ç‚ùå")
            markup.add(btn_yes, btn_no)
            bot.send_message(message.chat.id, text="–¢—ã —É–≤–µ—Ä–µ–Ω?", reply_markup=markup)
    elif mes_text == "–¥–∞‚úÖ" and user_state[str(message.chat.id)] == "del_all_day_is_correct":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        texts = []
        profile = "all"
        cur_date = helper["day"]
        helper["day"] = ""
        if not(cur_date in homework.keys()) or not(profile in homework[cur_date].keys()):
            bot.send_message(message.chat.id, text="–ù–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–ª–∏, –≤—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–π –¥–µ–Ω—å.",
                             reply_markup=markup)
            user_state[str(message.chat.id)] = "del_all_day"
        else:
            if len(homework[cur_date][profile]["texts"]) != 0:
                for subject in homework[cur_date][profile]["texts"]:
                    texts.append(cur_date + " " + profile + " " + subject + " texts")
            if len(homework[cur_date][profile]["im"]) != 0:
                for subject in homework[cur_date][profile]["im"]:
                    texts.append(cur_date + " " + profile + " " + subject + " im")
            for x in texts:
                day = x.split()[0]
                subject = x.split()[2]
                wh = x.split()[3]
                if wh == "texts":
                    del homework[day][profile]["texts"][subject]
                else:
                    if len(homework[day][profile]["im"]) != 0:
                        if subject in homework[day][profile]["im"].keys():
                            for y in homework[day][profile]["im"][subject]:
                                os.remove("./photos/" + y)
                        del homework[day][profile]["im"][subject]
            del homework[day]
            user_state[str(message.chat.id)] = 'redakt hw'
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
            btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
            btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
            btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
            markup.add(btn_hw_1, btn_hw_3)
            markup.add(btn_hw_4, btn_hw_5)
            btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.add(btn_back)
            bot.send_message(message.chat.id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.", reply_markup=markup)


    # –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∑
    elif (user_state[str(message.chat.id)] == 'redakt hw' or (
            user_state[str(message.chat.id)] == 'main menu' and mes_text == "‚ú®—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ‚ú®")):
        user_state[str(message.chat.id)] = 'redakt hw'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_hw_1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–∑")
        btn_hw_3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑")
        btn_hw_4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∑")
        btn_hw_5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –¥–∑ –Ω–∞ –¥–µ–Ω—å")
        markup.add(btn_hw_1, btn_hw_3)
        markup.add(btn_hw_4, btn_hw_5)
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn_back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å.", reply_markup=markup)


    open('./jsons/' + "user_state" + myid + ".json", 'w', encoding='utf-8').write(json.dumps(user_state, ensure_ascii=False))
    open('./jsons/homework' + myid + ".json", 'w', encoding='utf-8').write(json.dumps(homework, ensure_ascii=False))
    open('./jsons/' + "helper" + myid + ".json", 'w', encoding='utf-8').write(json.dumps(helper, ensure_ascii=False))

bot.polling(none_stop=True)
